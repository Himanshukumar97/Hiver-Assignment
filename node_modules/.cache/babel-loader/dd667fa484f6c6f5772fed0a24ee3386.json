{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport _ from 'lodash';\nconst initialState = {\n  getDataState: 'INIT',\n  data: [],\n  error: '',\n  lastPage: false,\n  hitsPerQuery: 0,\n  hitsPerPage: 0\n};\n\nconst initState = () => {\n  return initialState;\n};\n\nconst getDataLoading = state => {\n  return { ...state,\n    getDataState: 'LOADING'\n  };\n};\n\nconst getDataSuccess = (state, action) => {\n  let allData = _.cloneDeep(state.data);\n\n  let filteredData;\n  let allDataObjId = [];\n\n  _.forEach(allData, eachData => {\n    allDataObjId.push(eachData.objectID);\n  });\n\n  filteredData = action.data.hits.filter(obj => !_.includes(allDataObjId, obj.objectID) ? true : false);\n  allData = _.concat(allData, filteredData);\n  allData.forEach((eachData, index) => {\n    if (!eachData['relevancy_score']) {\n      allData[index]['relevancy_score'] = Number.MIN_SAFE_INTEGER;\n    }\n  });\n  allData.sort(function (a, b) {\n    if (a.relevancy_score < b.relevancy_score) return 1;else return -1;\n  });\n  let lastPage = false;\n\n  if (action.data.hits.length < action.data.hitsPerPage) {\n    lastPage = true;\n  }\n\n  let hitsPerQuery = action.data.hits.length;\n  return { ...state,\n    getDataState: 'SUCCESS',\n    data: allData,\n    lastPage: lastPage,\n    hitsPerQuery: hitsPerQuery,\n    hitsPerPage: action.data.hitsPerPage,\n    error: null\n  };\n};\n\nconst getDataError = (state, action) => {\n  return { ...state,\n    getDataState: 'ERROR',\n    error: action.error\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INIT_STATE:\n      return initState();\n\n    case actionTypes.GET_DATA_LOADING:\n      return getDataLoading(state, action);\n\n    case actionTypes.GET_DATA_SUCCESS:\n      return getDataSuccess(state, action);\n\n    case actionTypes.GET_DATA_ERROR:\n      return getDataError(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/himanshukumar/Documents/hiver-assignment/src/pages/Home/Store/reducer.js"],"names":["actionTypes","_","initialState","getDataState","data","error","lastPage","hitsPerQuery","hitsPerPage","initState","getDataLoading","state","getDataSuccess","action","allData","cloneDeep","filteredData","allDataObjId","forEach","eachData","push","objectID","hits","filter","obj","includes","concat","index","Number","MIN_SAFE_INTEGER","sort","a","b","relevancy_score","length","getDataError","reducer","type","INIT_STATE","GET_DATA_LOADING","GET_DATA_SUCCESS","GET_DATA_ERROR"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport _ from 'lodash';\nconst initialState = {\n    getDataState: 'INIT',\n    data:[],\n    error:'',\n    lastPage:false,\n    hitsPerQuery:0,\n    hitsPerPage:0\n}\n\nconst initState = () => {\n    return initialState;\n}\n\n\n\nconst getDataLoading = (state) => {\n    return {...state, \n        getDataState: 'LOADING'\n    } ;\n}\n\nconst getDataSuccess = (state, action) => {\n    let allData = _.cloneDeep(state.data);\n    let filteredData ; \n    let allDataObjId = [] ;\n    _.forEach(allData, eachData =>{\n        allDataObjId.push(eachData.objectID);\n    });\n    filteredData = action.data.hits.filter(obj =>\n        !_.includes(allDataObjId, obj.objectID) ?\n          true : false\n      )\n\n    \n    allData = _.concat(allData,filteredData) ; \n    \n    allData.forEach((eachData,index)=>{\n        if(!eachData['relevancy_score'])\n        {\n            allData[index]['relevancy_score'] = Number.MIN_SAFE_INTEGER; \n        }\n            \n    })\n    allData.sort(function(a, b) {\n        if (a.relevancy_score < b.relevancy_score) return 1;\n        else return -1 ;\n      });\n\n    let lastPage = false ; \n    if(action.data.hits.length <  action.data.hitsPerPage)\n    {\n        lastPage = true ; \n    }\n    let hitsPerQuery = action.data.hits.length;\n    return {...state,\n        getDataState: 'SUCCESS',\n        data: allData,\n        lastPage: lastPage,\n        hitsPerQuery:hitsPerQuery,\n        hitsPerPage:action.data.hitsPerPage,\n        error: null\n    }\n    \n    \n};\n\nconst getDataError = (state, action) => {\n    return {...state,\n        getDataState: 'ERROR',\n        error: action.error,\n    };\n};\n\n\nconst reducer = (state = initialState, action) => {\n   \n    switch (action.type) {\n\n        case actionTypes.INIT_STATE: return initState();\n        \n        case actionTypes.GET_DATA_LOADING: return getDataLoading(state, action);\n        case actionTypes.GET_DATA_SUCCESS: return getDataSuccess(state, action);\n        case actionTypes.GET_DATA_ERROR: return getDataError(state, action);\n       \n        default: return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport _ from 'lodash';\nexport const initState = () => {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.INIT_STATE\n    });\n  };\n};\nlet dataArray = [];\nlet count = 0;\nlet errMsg = '';\nlet lastNullQuery = '';\n\nfunction recursiveGetData(query, page, threshold, callback) {\n  let url = \"http://hn.algolia.com/api/v1/search?query=\" + query + \"&page=\" + page;\n  return axios.get(url).then(function (response) {\n    if (response.data.results.length > 0) {\n      if (!_.isEmpty(dataArray)) {\n        response.data.results.forEach(element => {\n          if (!dataArray.some(function (o) {\n            return _.isEqual(o[\"url\"], element.url);\n          })) {\n            if (_.includes(element.name.toLowerCase(), query.toLowerCase())) {\n              count = count + 1;\n            }\n\n            dataArray.push(element);\n          }\n        });\n      } else {\n        dataArray = _.cloneDeep(response.data.results);\n        dataArray.forEach(element => {\n          if (_.includes(element.name.toLowerCase(), query.toLowerCase())) {\n            count = count + 1;\n          }\n        });\n      }\n\n      if (count < threshold && !_.isEmpty(response.next)) {\n        return recursiveGetData(query, page + 1, threshold);\n      } else {\n        if (response.data.next === null) {\n          lastNullQuery = query;\n        }\n\n        callback();\n        return dataArray;\n      }\n    } else {\n      if (response.data.next === null) {\n        lastNullQuery = query;\n      }\n\n      callback();\n      return dataArray;\n    }\n  }).catch(error => {\n    errMsg = error;\n\n    if (error.response.data && error.response.data.errorMessage) {\n      errMsg = error.response.data.errorMessage;\n    }\n\n    callback();\n    return dataArray;\n  });\n}\n\n;\nexport const getData = (query, page, threshold) => {\n  return (dispatch, getState) => {\n    dataArray = _.cloneDeep(getState().data);\n    dispatch({\n      type: actionTypes.GET_DATA_LOADING\n    });\n    dataArray = _.cloneDeep(getState().data);\n    recursiveGetData(query, page, threshold, function () {\n      if (_.isEmpty(errMsg)) {\n        dispatch({\n          type: actionTypes.GET_DATA_SUCCESS,\n          data: dataArray,\n          lastNullQuery: lastNullQuery\n        });\n      } else {\n        dispatch({\n          type: actionTypes.GET_DATA_ERROR\n        });\n      }\n    });\n  };\n};\nexport const setCharacterOnSearch = characterDetails => {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.SET_CHARACTER_DETAILS,\n      characterDetails: characterDetails\n    });\n  };\n};","map":{"version":3,"sources":["/Users/himanshukumar/Documents/hiver-assignment/src/pages/Home/Store/action.js"],"names":["actionTypes","axios","_","initState","dispatch","type","INIT_STATE","dataArray","count","errMsg","lastNullQuery","recursiveGetData","query","page","threshold","callback","url","get","then","response","data","results","length","isEmpty","forEach","element","some","o","isEqual","includes","name","toLowerCase","push","cloneDeep","next","catch","error","errorMessage","getData","getState","GET_DATA_LOADING","GET_DATA_SUCCESS","GET_DATA_ERROR","setCharacterOnSearch","characterDetails","SET_CHARACTER_DETAILS"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport _ from 'lodash';\nexport const initState = () => {\n    return dispatch => {\n        dispatch({\n            type: actionTypes.INIT_STATE\n        })\n    };\n};\n\nlet dataArray = [];\nlet count = 0;\nlet errMsg = '';\nlet lastNullQuery = '';\nfunction recursiveGetData(query, page, threshold, callback) {\n\n    let url = \"http://hn.algolia.com/api/v1/search?query=\" + query + \"&page=\" + page;\n    return axios.get(url).then(function (response) {\n\n        if (response.data.results.length > 0) {\n            if (!_.isEmpty(dataArray)) {\n\n                response.data.results.forEach(element => {\n                    if (!(dataArray.some(function (o) { return (_.isEqual(o[\"url\"], element.url)) }))) {\n                        if (_.includes(element.name.toLowerCase(), query.toLowerCase())) {\n                            count = count + 1;\n                        }\n                        dataArray.push(element);\n                    }\n\n                });\n            }\n            else {\n\n                dataArray = _.cloneDeep(response.data.results);\n                dataArray.forEach(element => {\n                    if (_.includes(element.name.toLowerCase(), query.toLowerCase())) {\n                        count = count + 1;\n                    }\n                });\n            }\n            if (count < threshold && !_.isEmpty(response.next)) {\n                return recursiveGetData(query, page + 1, threshold);\n            }\n            else {\n                if (response.data.next === null)\n                {\n                    lastNullQuery = query;\n                }\n                callback();\n                return dataArray;\n\n            }\n        }\n        else {\n            if (response.data.next === null)\n                {\n                    lastNullQuery = query;\n                }\n                    \n\n            callback();\n            return dataArray;\n\n        }\n    }\n    ).catch(error => {\n        errMsg = error;\n        if (error.response.data && error.response.data.errorMessage) {\n            errMsg = error.response.data.errorMessage;\n        }\n        callback();\n        return dataArray;\n\n    });\n};\nexport const getData = (query, page, threshold) => {\n\n    return (dispatch, getState) => {\n        dataArray = _.cloneDeep(getState().data);\n        dispatch({\n            type: actionTypes.GET_DATA_LOADING\n        })\n\n        dataArray = _.cloneDeep(getState().data);\n        recursiveGetData(query, page, threshold, function () {\n            if(_.isEmpty(errMsg)){\n                dispatch({\n                    type: actionTypes.GET_DATA_SUCCESS,\n                    data: dataArray,\n                    lastNullQuery:lastNullQuery\n                })\n            }else{\n                dispatch({\n                    type: actionTypes.GET_DATA_ERROR,\n                })\n            }\n        });\n\n    };\n};\n\nexport const setCharacterOnSearch = (characterDetails) => {\n    return(dispatch)=>{\n        dispatch({\n            type: actionTypes.SET_CHARACTER_DETAILS,\n            characterDetails:characterDetails\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}
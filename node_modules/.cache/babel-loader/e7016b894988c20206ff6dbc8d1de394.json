{"ast":null,"code":"var _jsxFileName = \"/Users/himanshukumar/Documents/hiver-assignment/src/pages/Home/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport searchIcon from './search.png';\nimport './index.css';\nimport * as actions from './Store/action';\nimport cx from 'classnames';\nimport { NavLink } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchFilter = () => {\n      let query = this.state.query;\n\n      let resultArray = _.cloneDeep(this.props.data);\n\n      let searchArray = resultArray.filter(obj => _.includes(obj.name.toLowerCase(), query.toLowerCase()) ? true : false);\n      this.setState({\n        result: searchArray\n      });\n    };\n\n    this.keyNavigation = event => {\n      let focusedItem = this.state.focusedItem;\n      let resultArrayLength = this.state.result.length;\n      let getValue = '';\n\n      if (_.isEqual(event.keyCode.toString(), \"40\") && focusedItem < resultArrayLength) {\n        focusedItem = focusedItem + 1;\n\n        if (focusedItem < resultArrayLength) {\n          if (focusedItem !== 0) document.getElementById(\"span\" + (focusedItem - 1)).className = \"eachList\";\n          document.getElementById(\"span\" + focusedItem).className = \"focusEachList\";\n        }\n      } else if (_.isEqual(event.keyCode.toString(), \"38\") && focusedItem >= 0) {\n        focusedItem = focusedItem - 1;\n\n        if (focusedItem >= 0) {\n          if (focusedItem !== resultArrayLength - 1) document.getElementById(\"span\" + (focusedItem + 1)).className = \"eachList\";\n          document.getElementById(\"span\" + focusedItem).className = \"focusEachList\";\n          let scrollView = document.getElementById(\"span\" + focusedItem);\n          scrollView.scrollIntoView();\n        }\n      } else if (_.isEqual(event.keyCode.toString(), \"8\")) {\n        focusedItem = -1;\n        this.setState({\n          focusedItem: focusedItem\n        });\n      }\n\n      if (focusedItem >= 0 && focusedItem < resultArrayLength) {\n        let scrollView = document.getElementById(\"span\" + focusedItem);\n        getValue = document.getElementById(\"span\" + focusedItem).innerHTML;\n        document.getElementById(\"mySearchInput\").value = getValue;\n        scrollView.scrollIntoView();\n        this.setState({\n          focusedItem\n        });\n      }\n    };\n\n    this.handleOnInputChange = event => {\n      const query = event.target.value;\n      let searchArray = [];\n\n      let resultArray = _.cloneDeep(this.props.data);\n\n      let threshold = this.state.threshold;\n\n      if (_.isEmpty(query)) {\n        searchArray = [];\n        this.setState({\n          result: searchArray,\n          query,\n          focusedItem: -1\n        });\n      } else {\n        searchArray = resultArray.filter(obj => _.includes(obj.name.toLowerCase(), query.toLowerCase()) ? true : false);\n\n        if ((!_.isEqual(query.substr(0, this.props.lastNullQuery.length), this.props.lastNullQuery) && searchArray.length < threshold) | _.isEmpty(this.props.lastNullQuery)) {\n          //if(searchArray.length < threshold){  \n          this.props.getData(query, 1, threshold);\n        }\n\n        this.setState({\n          result: searchArray,\n          query\n        });\n      }\n    };\n\n    this.handleSearchNavigationPage = () => {\n      let result = _.cloneDeep(this.state.result);\n\n      let focusedItem = this.state.focusedItem;\n      let selectedData = {};\n      if (focusedItem >= 0 && focusedItem < result.length) selectedData = result[focusedItem];\n      if (!_.isEmpty(selectedData)) this.props.setCharacterOnSearch(selectedData);\n    };\n\n    this.state = {\n      query: '',\n      result: [],\n      threshold: 3,\n      focusedItem: -1\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.data !== this.props.data) {\n      this.searchFilter();\n    }\n  }\n\n  render() {\n    let searchResults = [];\n\n    let result = _.cloneDeep(this.state.result);\n\n    let focusedItem = this.state.focusedItem;\n\n    if (result.length > 0) {\n      result.forEach(function (item, index) {\n        searchResults.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"padding\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"span\" + index,\n            className: \"eachList\",\n            children: item.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"gender\",\n            children: item.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bDay\",\n            children: item.birth_year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"horizontalLine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, item.url, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this));\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maindiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Hacker News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropDown\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: searchIcon,\n            alt: \"searchIcon\",\n            className: \"searchIcon\",\n            onClick: () => this.handleSearchNavigationPage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"search-input\",\n            id: \"mySearchInput\",\n            placeholder: \"Type here to start searching\",\n            onKeyDown: event => this.keyNavigation(event),\n            onChange: event => this.handleOnInputChange(event),\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), this.props.getDataState === \"LOADING\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 52\n        }, this) : this.state.result ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemResults\",\n          children: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemResults\",\n          children: \" \\\"NO STATE FOUND\\\" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    getDataState: state.getDataState,\n    lastNullQuery: state.lastNullQuery\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: (query, page, threshold) => dispatch(actions.getData(query, page, threshold)),\n    setCharacterOnSearch: characterDetails => dispatch(actions.setCharacterOnSearch(characterDetails))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/Users/himanshukumar/Documents/hiver-assignment/src/pages/Home/index.js"],"names":["React","Component","connect","searchIcon","actions","cx","NavLink","_","HomePage","constructor","props","searchFilter","query","state","resultArray","cloneDeep","data","searchArray","filter","obj","includes","name","toLowerCase","setState","result","keyNavigation","event","focusedItem","resultArrayLength","length","getValue","isEqual","keyCode","toString","document","getElementById","className","scrollView","scrollIntoView","innerHTML","value","handleOnInputChange","target","threshold","isEmpty","substr","lastNullQuery","getData","handleSearchNavigationPage","selectedData","setCharacterOnSearch","componentDidMount","componentDidUpdate","prevProps","prevState","render","searchResults","forEach","item","index","push","gender","birth_year","url","getDataState","mapStateToProps","mapDispatchToProps","dispatch","page","characterDetails"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport searchIcon from './search.png';\nimport './index.css';\nimport * as actions from './Store/action';\nimport cx from 'classnames';\nimport { NavLink } from \"react-router-dom\";\nimport _ from 'lodash';\nclass HomePage extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      query: '',\n      result: [],\n      threshold: 3,\n      focusedItem: -1\n    }\n  }\n\n  componentDidMount() {\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.data !== this.props.data) {\n      this.searchFilter();\n    }\n  }\n\n  searchFilter = () => {\n    let query = this.state.query;\n    let resultArray = _.cloneDeep(this.props.data);\n    let searchArray = resultArray.filter(obj =>\n      _.includes(obj.name.toLowerCase(), query.toLowerCase()) ?\n        true : false\n    )\n    this.setState({ result: searchArray });\n\n  }\n  keyNavigation = (event) => {\n    let focusedItem = this.state.focusedItem;\n    let resultArrayLength = this.state.result.length;\n    let getValue = '';\n    if (_.isEqual(event.keyCode.toString(), \"40\") && focusedItem < resultArrayLength) {\n      focusedItem = focusedItem + 1;\n      if (focusedItem < resultArrayLength) {\n        if (focusedItem !== 0)\n          document.getElementById(\"span\" + (focusedItem - 1)).className = \"eachList\";\n        document.getElementById(\"span\" + focusedItem).className = \"focusEachList\";\n\n      }\n\n\n    }\n    else if (_.isEqual(event.keyCode.toString(), \"38\") && focusedItem >= 0) {\n      focusedItem = focusedItem - 1;\n      if (focusedItem >= 0) {\n        if (focusedItem !== resultArrayLength - 1)\n          document.getElementById(\"span\" + (focusedItem + 1)).className = \"eachList\";\n        document.getElementById(\"span\" + focusedItem).className = \"focusEachList\";\n\n        let scrollView = document.getElementById(\"span\" + focusedItem);\n        scrollView.scrollIntoView();\n      }\n\n    }\n    else if (_.isEqual(event.keyCode.toString(), \"8\")) {\n      focusedItem = -1;\n      this.setState({ focusedItem: focusedItem })\n    }\n    if (focusedItem >= 0 && focusedItem < resultArrayLength) {\n\n      let scrollView = document.getElementById(\"span\" + focusedItem);\n      getValue = document.getElementById(\"span\" + focusedItem).innerHTML;\n      document.getElementById(\"mySearchInput\").value = getValue;\n\n      scrollView.scrollIntoView();\n      this.setState({ focusedItem });\n    }\n\n  }\n  handleOnInputChange = (event) => {\n\n    const query = event.target.value;\n    let searchArray = [];\n\n    let resultArray = _.cloneDeep(this.props.data);\n    let threshold = this.state.threshold;\n\n    if (_.isEmpty(query)) {\n\n      searchArray = [];\n      this.setState({ result: searchArray, query, focusedItem: -1 });\n    }\n    else {\n      searchArray = resultArray.filter(obj =>\n        _.includes(obj.name.toLowerCase(), query.toLowerCase()) ?\n          true : false\n      )\n      if (((!_.isEqual(query.substr(0, this.props.lastNullQuery.length), this.props.lastNullQuery)) && searchArray.length < threshold) | (_.isEmpty(this.props.lastNullQuery))) {\n        //if(searchArray.length < threshold){  \n        this.props.getData(query, 1, threshold);\n      }\n\n\n\n      this.setState({ result: searchArray, query });\n    }\n\n  }\n  handleSearchNavigationPage = () => {\n    let result = _.cloneDeep(this.state.result);\n    let focusedItem = this.state.focusedItem;\n    let selectedData = {};\n    if (focusedItem >= 0 && focusedItem < result.length)\n      selectedData = result[focusedItem];\n    if (!_.isEmpty(selectedData))\n      this.props.setCharacterOnSearch(selectedData)\n  }\n  render() {\n    let searchResults = [];\n    let result = _.cloneDeep(this.state.result);\n    let focusedItem = this.state.focusedItem;\n\n    if (result.length > 0) {\n      result.forEach(function (item, index) {\n        searchResults.push(\n          <div key={item.url} className=\"padding\">\n            <span id={\"span\" + index} key={index} className=\"eachList\">{item.name}</span>\n            <span className=\"gender\">{item.gender}</span>\n            <div className=\"bDay\">\n              {item.birth_year}\n            </div>\n            <hr className=\"horizontalLine\" />\n          </div>\n        )\n      })\n    }\n\n    return (\n      <div className=\"maindiv\">\n        <h2>\n          Search Hacker News\n        </h2>\n        <div className=\"dropDown\">\n          <div className=\"searchBox\">\n            <img src={searchIcon} alt=\"searchIcon\" className=\"searchIcon\" onClick={() => this.handleSearchNavigationPage()} />\n            <input className=\"search-input\"\n              id=\"mySearchInput\"\n              placeholder=\"Type here to start searching\"\n              onKeyDown={(event) => this.keyNavigation(event)}\n              onChange={(event) => this.handleOnInputChange(event)}\n              autoComplete=\"off\"\n            />\n          </div>\n\n          {/* <div className=\"divSearch\"  disabled={(focusedItem >=0 && focusedItem < result.length )? false : true}>\n          <NavLink to={{\n            pathname: \"/person/\" + focusedItem\n\n          }}\n          >\n            \n          </NavLink>\n          </div> */}\n\n          {this.props.getDataState === \"LOADING\" ? <div className=\"loader\"></div> :\n            this.state.result\n              ? <div className=\"itemResults\">\n                {searchResults}\n              </div>\n              : <div className=\"itemResults\"> \"NO STATE FOUND\" </div>}\n\n\n\n        </div>\n\n\n      </div>\n    );\n  }\n\n}\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    getDataState: state.getDataState,\n    lastNullQuery: state.lastNullQuery\n  };\n};\n\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: (query, page, threshold) => dispatch(actions.getData(query, page, threshold)),\n    setCharacterOnSearch: (characterDetails) => dispatch(actions.setCharacterOnSearch(characterDetails))\n  };\n};\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(HomePage));\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport _ from 'lodash';\nexport const initState = () => {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.INIT_STATE\n    });\n  };\n};\nlet dataArray = [];\nlet count = 0;\nexport const getData = (query, page) => (dispatch, state) => {\n  dispatch({\n    type: actionTypes.GET_DATA_LOADING\n  });\n  let url = \"http://hn.algolia.com/api/v1/search?query=\" + query + \"&page=\" + page;\n  axios.get(url).then(response => {\n    if (response.status === 200 || response.status === 201) {\n      dispatch({\n        type: actionTypes.GET_DATA_SUCCESS,\n        data: response.data\n      });\n    }\n  }).catch(error => {\n    let errMsg = error;\n    dispatch({\n      type: actionTypes.GET_DATA_ERROR,\n      error: errMsg\n    });\n  });\n};","map":{"version":3,"sources":["/Users/himanshukumar/Documents/hiver-assignment/src/pages/Home/Store/action.js"],"names":["actionTypes","axios","_","initState","dispatch","type","INIT_STATE","dataArray","count","getData","query","page","state","GET_DATA_LOADING","url","get","then","response","status","GET_DATA_SUCCESS","data","catch","error","errMsg","GET_DATA_ERROR"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,WAAW,CAACM;AADb,KAAD,CAAR;AAGH,GAJD;AAKH,CANM;AAQP,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,KAAK,GAAG,CAAZ;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,IAAP,KAAgB,CAACP,QAAD,EAAUQ,KAAV,KAAoB;AACvDR,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEL,WAAW,CAACa;AADb,GAAD,CAAR;AAGE,MAAIC,GAAG,GAAG,+CAA+CJ,KAA/C,GAAuD,QAAvD,GAAkEC,IAA5E;AACAV,EAAAA,KAAK,CAACc,GAAN,CAAUD,GAAV,EACGE,IADH,CACSC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,GAAnD,EAAwD;AACtDd,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,WAAW,CAACmB,gBADX;AAEPC,QAAAA,IAAI,EAAEH,QAAQ,CAACG;AAFR,OAAD,CAAR;AAID;AACF,GARH,EASGC,KATH,CASUC,KAAD,IAAW;AAChB,QAAIC,MAAM,GAAGD,KAAb;AAEAlB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,WAAW,CAACwB,cADX;AAEPF,MAAAA,KAAK,EAAEC;AAFA,KAAD,CAAR;AAID,GAhBH;AAiBL,CAtBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport _ from 'lodash';\nexport const initState = () => {\n    return dispatch => {\n        dispatch({\n            type: actionTypes.INIT_STATE\n        })\n    };\n};\n\nlet dataArray = [];\nlet count = 0;\n\nexport const getData = (query,page) => (dispatch,state) => {\n    dispatch({\n        type: actionTypes.GET_DATA_LOADING,\n      });\n      let url = \"http://hn.algolia.com/api/v1/search?query=\" + query + \"&page=\" + page;\n      axios.get(url)\n        .then((response) => {\n          if (response.status === 200 || response.status === 201) {\n            dispatch({\n              type: actionTypes.GET_DATA_SUCCESS,\n              data: response.data,\n            });\n          }\n        })\n        .catch((error) => {\n          let errMsg = error;\n          \n          dispatch({\n            type: actionTypes.GET_DATA_ERROR,\n            error: errMsg,\n          });\n        });\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/himanshukumar/Documents/hiver-assignment/src/pages/Home/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport searchIcon from './search.png';\nimport './index.css';\nimport * as actions from './Store/action';\nimport cx from 'classnames';\nimport { NavLink } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchFilter = () => {\n      let query = this.state.query;\n\n      let resultArray = _.cloneDeep(this.props.data.hits); // let searchArray = resultArray.filter(obj =>\n      //   _.includes(obj.name.toLowerCase(), query.toLowerCase()) ?\n      //     true : false\n      // )\n\n\n      console.log(\"resultArray\", resultArray);\n      this.setState({\n        result: resultArray\n      });\n    };\n\n    this.debounceFunction = (query, page, fn, td) => {\n      let thisPar = this;\n      return function () {\n        const context = this;\n        clearTimeout(thisPar.debounceTimer);\n        thisPar.debounceTimer = setTimeout(() => fn.call(context, query, page), td);\n      };\n    };\n\n    this.handleOnInputChange = event => {\n      const query = event.target.value;\n      let searchArray = [];\n\n      let resultArray = _.cloneDeep(this.props.data);\n\n      let threshold = this.state.threshold;\n      let page = 1; // if (_.isEmpty(query)) {\n      //   searchArray = [];\n      //   this.setState({ result: searchArray, query, focusedItem: -1 });\n      // }\n      // else {\n      //     searchArray = resultArray.filter(obj =>\n      //       _.includes(obj.name.toLowerCase(), query.toLowerCase()) ?\n      //         true : false\n      //     )\n      //     if (((!_.isEqual(query.substr(0, this.props.lastNullQuery.length), this.props.lastNullQuery))&& searchArray.length < threshold)|(_.isEmpty(this.props.lastNullQuery)) ) {\n      //     //if(searchArray.length < threshold){  \n      //       this.props.getData(query, 1, threshold);\n      //     }\n      //   this.setState({ result: searchArray, query });\n      // }\n\n      const debouncer = this.debounceFunction(query, page, this.props.getData, 2000);\n      debouncer();\n    };\n\n    this.state = {\n      query: '',\n      result: [],\n      threshold: 3,\n      focusedItem: -1\n    };\n    this.debounceTimer = null;\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.data !== this.props.data) {\n      this.searchFilter();\n    }\n  }\n\n  render() {\n    let searchResults = [];\n\n    let result = _.cloneDeep(this.state.result);\n\n    if (result.length > 0) {\n      result.forEach(function (item, index) {\n        searchResults.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"padding\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"span\" + index,\n              className: \"eachList\",\n              children: item.story_title\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gender\",\n              children: item.story_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [item.author ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Author: \", item.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this) : null, item.num_comments ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"comments: \", item.num_comments]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bDay\",\n            children: item.birth_year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"horizontalLine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, item.url, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this));\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maindiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Hacker News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropDown\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx(\"searchBox\"),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: searchIcon,\n            alt: \"searchIcon\",\n            className: \"searchIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"search-input\",\n            id: \"mySearchInput\",\n            placeholder: \"Type here to start searching\" //onKeyUp={this.debounceFunction(this.props.getData,2000)}\n            ,\n            onKeyUp: event => this.handleOnInputChange(event),\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), this.props.getDataState === \"LOADING\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 52\n        }, this) : this.state.result ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemResults\",\n          children: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemResults\",\n          children: \" \\\"NO DATA FOUND\\\" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    getDataState: state.getDataState,\n    lastNullQuery: state.lastNullQuery\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: (query, page) => dispatch(actions.getData(query, page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/Users/himanshukumar/Documents/hiver-assignment/src/pages/Home/index.js"],"names":["React","Component","connect","searchIcon","actions","cx","NavLink","_","HomePage","constructor","props","searchFilter","query","state","resultArray","cloneDeep","data","hits","console","log","setState","result","debounceFunction","page","fn","td","thisPar","context","clearTimeout","debounceTimer","setTimeout","call","handleOnInputChange","event","target","value","searchArray","threshold","debouncer","getData","focusedItem","componentDidMount","componentDidUpdate","prevProps","prevState","render","searchResults","length","forEach","item","index","push","story_title","story_url","author","num_comments","birth_year","url","getDataState","mapStateToProps","lastNullQuery","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport searchIcon from './search.png';\nimport './index.css';\nimport * as actions from './Store/action';\nimport cx from 'classnames';\nimport { NavLink } from \"react-router-dom\";\nimport _ from 'lodash';\nclass HomePage extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      query: '',\n      result: [],\n      threshold: 3,\n      focusedItem: -1,\n    }\n    this.debounceTimer = null;\n  }\n\n  componentDidMount() {\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.data !== this.props.data) {\n      this.searchFilter();\n    }\n  }\n\n  searchFilter = () => {\n    let query = this.state.query;\n    let resultArray = _.cloneDeep(this.props.data.hits);\n    // let searchArray = resultArray.filter(obj =>\n    //   _.includes(obj.name.toLowerCase(), query.toLowerCase()) ?\n    //     true : false\n    // )\n    console.log(\"resultArray\",resultArray);\n    \n    this.setState({ result: resultArray });\n\n  }\n\n  debounceFunction = (query,page,fn,td)  => {\n\n    let thisPar = this;\n    return function () {\n      const context = this;\n      clearTimeout(thisPar.debounceTimer)\n      thisPar.debounceTimer = setTimeout(() => fn.call(context, query,page), td);\n      }\n    \n  }\n\n\n  handleOnInputChange = (event) => {\n\n    const query = event.target.value;\n    let searchArray = [];\n\n    let resultArray = _.cloneDeep(this.props.data);\n    let threshold = this.state.threshold;\n    let page = 1 ;\n    // if (_.isEmpty(query)) {\n\n    //   searchArray = [];\n    //   this.setState({ result: searchArray, query, focusedItem: -1 });\n    // }\n    // else {\n    //     searchArray = resultArray.filter(obj =>\n    //       _.includes(obj.name.toLowerCase(), query.toLowerCase()) ?\n    //         true : false\n    //     )\n    //     if (((!_.isEqual(query.substr(0, this.props.lastNullQuery.length), this.props.lastNullQuery))&& searchArray.length < threshold)|(_.isEmpty(this.props.lastNullQuery)) ) {\n    //     //if(searchArray.length < threshold){  \n    //       this.props.getData(query, 1, threshold);\n    //     }\n        \n      \n\n    //   this.setState({ result: searchArray, query });\n    // }\n    \n    const debouncer = this.debounceFunction(query,page,this.props.getData,2000);\n    debouncer();\n\n  }\n  \n  render() {\n    let searchResults = [];\n    let result = _.cloneDeep(this.state.result);\n    \n    if (result.length > 0) {\n      result.forEach(function (item, index) {\n        searchResults.push(\n          <div key={item.url} className=\"padding\">\n            <div>\n            <span id={\"span\" + index} key={index} className=\"eachList\">{item.story_title}</span>\n            <span className=\"gender\">{item.story_url}</span>\n            \n            </div>\n            <div>\n              {item.author?\n              <span>\n                Author: {item.author}\n              </span>\n              :\n              null}\n              {item.num_comments?\n              <span>\n                comments: {item.num_comments}\n              </span>\n              :\n              null}\n            </div>\n\n            <div className=\"bDay\">\n              {item.birth_year}\n            </div>\n            <hr className=\"horizontalLine\" />\n          </div>\n        )\n      })\n    }\n\n    return (\n      <div className=\"maindiv\">\n        <h2>\n          Search Hacker News\n        </h2>\n        <div className=\"dropDown\">\n          <div className={cx(\"searchBox\")} >\n            <img src={searchIcon} alt=\"searchIcon\" className=\"searchIcon\" />\n            <input className=\"search-input\"\n              id=\"mySearchInput\"\n              placeholder=\"Type here to start searching\"\n              //onKeyUp={this.debounceFunction(this.props.getData,2000)}\n              onKeyUp={(event) => this.handleOnInputChange(event)}\n              autoComplete=\"off\"\n            />\n          </div>\n\n          {/* <div className=\"divSearch\"  disabled={(focusedItem >=0 && focusedItem < result.length )? false : true}>\n          <NavLink to={{\n            pathname: \"/person/\" + focusedItem\n\n          }}\n          >\n            \n          </NavLink>\n          </div> */}\n\n          {this.props.getDataState === \"LOADING\" ? <div className=\"loader\"></div> :\n            this.state.result\n              ? <div className=\"itemResults\">\n                {searchResults}\n              </div>\n              : <div className=\"itemResults\"> \"NO DATA FOUND\" </div>}\n\n\n\n        </div>\n\n\n      </div>\n    );\n  }\n\n}\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    getDataState: state.getDataState,\n    lastNullQuery: state.lastNullQuery\n  };\n};\n\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: (query, page) => dispatch(actions.getData(query, page)),\n  };\n};\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(HomePage));\n\n"]},"metadata":{},"sourceType":"module"}
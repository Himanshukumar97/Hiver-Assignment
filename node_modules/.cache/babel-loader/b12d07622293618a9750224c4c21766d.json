{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport _ from 'lodash';\nconst initialState = {\n  getDataState: 'INIT',\n  data: [],\n  error: '',\n  lastNullQuery: ''\n};\n\nconst initState = () => {\n  return initialState;\n}; //GET DATA REDUCERS\n\n\nconst getDataLoading = state => {\n  return { ...state,\n    getDataState: 'LOADING'\n  };\n};\n\nconst getDataSuccess = (state, action) => {\n  let allData = _.cloneDeep(state.data);\n\n  let filteredData;\n  let allDataObjId = [];\n\n  _.forEach(allData, eachData => {\n    allDataObjId.push(eachData.objectID);\n  });\n\n  filteredData = action.data.hits.filter(obj => !_.includes(allDataObjId, obj.objectID) ? true : false);\n  allData = _.concat(allData, filteredData);\n  console.log(\"before sort \", allData);\n  allData.forEach((eachData, index) => {\n    console.log(\"eachData['relevancy_score']\", eachData['relevancy_score']);\n\n    if (!eachData['relevancy_score']) {\n      console.log(\"TRUE\");\n      allData[index]['relevancy_score'] = Number.MIN_SAFE_INTEGER;\n    }\n  });\n  allData.sort(function (a, b) {\n    console.log(\"dd \", a.relevancy_score > b.relevancy_score, a.relevancy_score, b.relevancy_score);\n    if (a.relevancy_score < b.relevancy_score) return 1;else return -1;\n  });\n  console.log(\"after sort \", allData);\n  return { ...state,\n    getDataState: 'SUCCESS',\n    data: allData,\n    lastNullQuery: action.lastNullQuery,\n    error: null\n  };\n};\n\nconst getDataError = (state, action) => {\n  return { ...state,\n    getDataState: 'ERROR',\n    error: action.error\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INIT_STATE:\n      return initState();\n\n    case actionTypes.GET_DATA_LOADING:\n      return getDataLoading(state, action);\n\n    case actionTypes.GET_DATA_SUCCESS:\n      return getDataSuccess(state, action);\n\n    case actionTypes.GET_DATA_ERROR:\n      return getDataError(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/himanshukumar/Documents/hiver-assignment/src/pages/Home/Store/reducer.js"],"names":["actionTypes","_","initialState","getDataState","data","error","lastNullQuery","initState","getDataLoading","state","getDataSuccess","action","allData","cloneDeep","filteredData","allDataObjId","forEach","eachData","push","objectID","hits","filter","obj","includes","concat","console","log","index","Number","MIN_SAFE_INTEGER","sort","a","b","relevancy_score","getDataError","reducer","type","INIT_STATE","GET_DATA_LOADING","GET_DATA_SUCCESS","GET_DATA_ERROR"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport _ from 'lodash';\nconst initialState = {\n    getDataState: 'INIT',\n    data:[],\n    error:'',\n    lastNullQuery:''\n}\n\nconst initState = () => {\n    return initialState;\n}\n\n//GET DATA REDUCERS\nconst getDataLoading = (state) => {\n    return {...state, \n        getDataState: 'LOADING'\n    } ;\n}\n\nconst getDataSuccess = (state, action) => {\n    let allData = _.cloneDeep(state.data);\n    let filteredData ; \n    let allDataObjId = [] ;\n    _.forEach(allData, eachData =>{\n        allDataObjId.push(eachData.objectID);\n    });\n    filteredData = action.data.hits.filter(obj =>\n        !_.includes(allDataObjId, obj.objectID) ?\n          true : false\n      )\n\n    \n    allData = _.concat(allData,filteredData) ; \n    console.log(\"before sort \",allData);\n    allData.forEach((eachData,index)=>{\n        console.log(\"eachData['relevancy_score']\",eachData['relevancy_score']);\n         \n        if(!eachData['relevancy_score'])\n        {\n            console.log(\"TRUE\");\n            \n            allData[index]['relevancy_score'] = Number.MIN_SAFE_INTEGER; \n        }\n            \n    })\n    allData.sort(function(a, b) {\n        console.log(\"dd \",a.relevancy_score > b.relevancy_score , a.relevancy_score,b.relevancy_score);\n        \n        if (a.relevancy_score < b.relevancy_score) return 1;\n        else return -1 ;\n      });\n\n      console.log(\"after sort \",allData);\n    return {...state,\n        getDataState: 'SUCCESS',\n        data: allData,\n        lastNullQuery:action.lastNullQuery,\n        error: null\n    }\n};\n\nconst getDataError = (state, action) => {\n    return {...state,\n        getDataState: 'ERROR',\n        error: action.error,\n    };\n};\n\n\nconst reducer = (state = initialState, action) => {\n   \n    switch (action.type) {\n\n        case actionTypes.INIT_STATE: return initState();\n        \n        case actionTypes.GET_DATA_LOADING: return getDataLoading(state, action);\n        case actionTypes.GET_DATA_SUCCESS: return getDataSuccess(state, action);\n        case actionTypes.GET_DATA_ERROR: return getDataError(state, action);\n\n        default: return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/himanshukumar/Documents/hiver-assignment/src/pages/Home/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport searchIcon from './search.png';\nimport './index.css';\nimport * as actions from './Store/action';\nimport cx from 'classnames';\nimport { NavLink } from \"react-router-dom\";\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchFilter = () => {\n      let query = this.state.query;\n\n      let resultArray = _.cloneDeep(this.props.data); // let searchArray = resultArray.filter(obj =>\n      //   _.includes(obj.name.toLowerCase(), query.toLowerCase()) ?\n      //     true : false\n      // )\n\n\n      console.log(\"resultArray\", resultArray);\n      this.setState({\n        result: resultArray\n      });\n    };\n\n    this.debounceFunction = (query, page, fn, td) => {\n      let thisPar = this;\n      return function () {\n        const context = this;\n        clearTimeout(thisPar.debounceTimer);\n        thisPar.debounceTimer = setTimeout(() => fn.call(context, query, page), td);\n      };\n    };\n\n    this.handleOnInputChange = event => {\n      const query = event.target.value;\n      let searchArray = [];\n\n      let resultArray = _.cloneDeep(this.props.data);\n\n      let threshold = this.state.threshold;\n      let page = 1;\n\n      if (_.isEmpty(query)) {\n        searchArray = [];\n        this.setState({\n          result: searchArray,\n          query\n        });\n      } else {\n        searchArray = resultArray.filter(function (obj) {\n          if (_.includes(obj.name.toLowerCase(), query.toLowerCase())) return true;\n        });\n\n        if ((!_.isEqual(query.substr(0, this.props.lastNullQuery.length), this.props.lastNullQuery) && searchArray.length < threshold) | _.isEmpty(this.props.lastNullQuery)) {\n          //if(searchArray.length < threshold){  \n          this.props.getData(query, 1, threshold);\n        }\n\n        this.setState({\n          result: searchArray,\n          query\n        });\n      }\n\n      const debouncer = this.debounceFunction(query, page, this.props.getData, 2000);\n      debouncer();\n    };\n\n    this.state = {\n      query: '',\n      result: [],\n      threshold: 3,\n      focusedItem: -1\n    };\n    this.debounceTimer = null;\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.data !== this.props.data) {\n      this.searchFilter();\n    }\n  }\n\n  render() {\n    let searchResults = [];\n\n    let result = _.cloneDeep(this.state.result);\n\n    if (result.length > 0) {\n      if (result.length > 10) result = result.slice(0, 10);\n      result.forEach(function (item, index) {\n        searchResults.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"padding\",\n          children: [item.url || item.title ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subList\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spanWithBlack\",\n              id: \"span\" + index,\n              children: item.title ? item.title : \"\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"storyUrl\",\n              children: item.url ? '(' + item.url + ')' : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this) : null, item.author || item.num_comments ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subList\",\n            children: [item.author ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Author: \", item.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this) : null, item.num_comments ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.author ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: \" | \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 36\n              }, this) : null, \"comments: \", item.num_comments]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this) : null, item.relevancy_score ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.num_comments || item.author ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: \" | \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 57\n              }, this) : null, \"relevancy_score: \", item.relevancy_score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this) : null, item.story_text ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subList spanWithBlack\",\n            children: item.story_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 32\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"horizontalLine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this));\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maindiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Hacker News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropDown\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx(\"\"),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: searchIcon,\n            alt: \"searchIcon\",\n            className: \"searchIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"searchBox\",\n            id: \"mySearchInput\",\n            placeholder: \"Type here to start searching\",\n            onKeyUp: event => this.handleOnInputChange(event),\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), this.props.getDataState === \"LOADING\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 52\n        }, this) : this.state.result ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemResults\",\n          children: searchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemResults\",\n          children: \" \\\"NO DATA FOUND\\\" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    getDataState: state.getDataState,\n    lastNullQuery: state.lastNullQuery\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: (query, page) => dispatch(actions.getData(query, page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/Users/himanshukumar/Documents/hiver-assignment/src/pages/Home/index.js"],"names":["React","Component","connect","searchIcon","actions","cx","NavLink","_","HomePage","constructor","props","searchFilter","query","state","resultArray","cloneDeep","data","console","log","setState","result","debounceFunction","page","fn","td","thisPar","context","clearTimeout","debounceTimer","setTimeout","call","handleOnInputChange","event","target","value","searchArray","threshold","isEmpty","filter","obj","includes","name","toLowerCase","isEqual","substr","lastNullQuery","length","getData","debouncer","focusedItem","componentDidMount","componentDidUpdate","prevProps","prevState","render","searchResults","slice","forEach","item","index","push","url","title","author","num_comments","relevancy_score","story_text","getDataState","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport searchIcon from './search.png';\nimport './index.css';\nimport * as actions from './Store/action';\nimport cx from 'classnames';\nimport { NavLink } from \"react-router-dom\";\nimport _ from 'lodash';\nclass HomePage extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      query: '',\n      result: [],\n      threshold: 3,\n      focusedItem: -1,\n    }\n    this.debounceTimer = null;\n  }\n\n  componentDidMount() {\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.data !== this.props.data) {\n      this.searchFilter();\n    }\n  }\n\n  searchFilter = () => {\n    let query = this.state.query;\n    let resultArray = _.cloneDeep(this.props.data);\n    // let searchArray = resultArray.filter(obj =>\n    //   _.includes(obj.name.toLowerCase(), query.toLowerCase()) ?\n    //     true : false\n    // )\n    console.log(\"resultArray\", resultArray);\n\n    this.setState({ result: resultArray });\n\n  }\n\n  debounceFunction = (query, page, fn, td) => {\n\n    let thisPar = this;\n    return function () {\n      const context = this;\n      clearTimeout(thisPar.debounceTimer)\n      thisPar.debounceTimer = setTimeout(() => fn.call(context, query, page), td);\n    }\n\n  }\n\n\n  handleOnInputChange = (event) => {\n\n    const query = event.target.value;\n    let searchArray = [];\n\n    let resultArray = _.cloneDeep(this.props.data);\n    let threshold = this.state.threshold;\n    let page = 1;\n    if (_.isEmpty(query)) {\n\n      searchArray = [];\n      this.setState({ result: searchArray, query});\n    }\n    else {\n        searchArray = resultArray.filter( function(obj){\n\n         if (_.includes(obj.name.toLowerCase(), query.toLowerCase()))\n          return true \n        }\n          \n        )\n        if (((!_.isEqual(query.substr(0, this.props.lastNullQuery.length), this.props.lastNullQuery))&& searchArray.length < threshold)|(_.isEmpty(this.props.lastNullQuery)) ) {\n        //if(searchArray.length < threshold){  \n          this.props.getData(query, 1, threshold);\n        }\n\n\n\n      this.setState({ result: searchArray, query });\n    }\n\n    const debouncer = this.debounceFunction(query, page, this.props.getData, 2000);\n    debouncer();\n\n  }\n\n  render() {\n    let searchResults = [];\n    let result = _.cloneDeep(this.state.result);\n    if (result.length > 0) {\n      if(result.length > 10 )\n        result = result.slice(0,10);\n      result.forEach(function (item, index) {\n        searchResults.push(\n          <div key={index} className=\"padding\">\n\n            {item.url || item.title ?\n              <div className=\"subList\">\n                <span className=\"spanWithBlack\" id={\"span\" + index} key={index} >{item.title ? item.title : \"\"}</span>\n                <span className=\"storyUrl\">{item.url ? '(' + item.url + ')' : \"\"}</span>\n\n              </div>\n              :\n              null\n            }\n            {item.author || item.num_comments ?\n              <div className=\"subList\">\n                {item.author ?\n                  <span>\n                    Author: {item.author}\n                  </span>\n                  :\n                  null}\n                {item.num_comments ?\n                  <span>\n                    {item.author ? <React.Fragment> | </React.Fragment> : null}\n                    comments: {item.num_comments}\n                  </span>\n                  :\n                  null}\n                {item.relevancy_score ?\n                  <span>\n                    {item.num_comments || item.author ? <React.Fragment> | </React.Fragment> : null}\n                    relevancy_score: {item.relevancy_score}\n                  </span>\n                  :\n                  null}\n              </div>\n              : null}\n            {item.story_text ? <div className=\"subList spanWithBlack\">\n              {item.story_text}\n            </div> : null}\n\n            <hr className=\"horizontalLine\" />\n          </div>\n        )\n      })\n    }\n\n    return (\n      <div className=\"maindiv\">\n        <h2>\n          Search Hacker News\n        </h2>\n        <div className=\"dropDown\">\n          <div className={cx(\"\")} >\n            <img src={searchIcon} alt=\"searchIcon\" className=\"searchIcon\" />\n            <input className=\"searchBox\"\n              id=\"mySearchInput\"\n              placeholder=\"Type here to start searching\"\n              onKeyUp={(event) => this.handleOnInputChange(event)}\n              autoComplete=\"off\"\n            />\n          </div>\n\n          {this.props.getDataState === \"LOADING\" ? <div className=\"loader\"></div> :\n            this.state.result\n              ? <div className=\"itemResults\">\n                {searchResults}\n              </div>\n              : <div className=\"itemResults\"> \"NO DATA FOUND\" </div>}\n\n\n\n        </div>\n\n\n      </div>\n    );\n  }\n\n}\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    getDataState: state.getDataState,\n    lastNullQuery: state.lastNullQuery\n  };\n};\n\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: (query, page) => dispatch(actions.getData(query, page)),\n  };\n};\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(HomePage));\n\n"]},"metadata":{},"sourceType":"module"}